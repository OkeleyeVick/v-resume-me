
	const readFile = (file) =>
		new Promise((res, rej) => {
			const fileReader = new FileReader();
			fileReader.addEventListener("load", () => res(fileReader.result));
			fileReader.addEventListener("error", () => rej(fileReader.error));
			fileReader.readAsArrayBuffer(file);
		});

	async function DownloadFile(pdfImage) {
		const pdfDoc = await PDFDocument.create();

		const jpegDimension = pdfDoc.embedJpg(pdfImage);
		const resumeImage = await jpegDimension;

		const blankPage = pdfDoc.addPage(); //create blank page
		blankPage.drawImage(resumeImage); // add the image to the blank page

		let base64Chunk = await pdfDoc.saveAsBase64();
		base64Chunk = `data:application/pdf;base64${base64Chunk}`;

		// console.log(base64Chunk); // RESULT ==> SOI not found in JPEG
	}
function attemptToDownload() {
		// convert html page to jpeg
		html2image.toJpeg(resumeRef.current, { style: { backgroundColor: "#fff" } }).then(async (file) => {
			/* returns base64 string,
			then convert it to a file  */
			const newFile = new File([file], "", { type: "image/jpeg" });
			console.log(newFile);
			const result = await readFile(newFile); //read the file
			DownloadFile(result);
		});
	}
	